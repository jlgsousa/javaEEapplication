

import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.EntityTransaction;
import javax.persistence.Persistence;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.HashMap;
import java.util.Map;

public class ConnectionTester {

    private static final String url = "jdbc:postgresql://localhost:5432/catalog";
    private static final String user = "postgres";
    private static final String password = "macacos22";
    private static Connection connection;

    public static void main(String[] args) throws SQLException {
        connect();
        saveStudent();
//        createTables();
//        deleteFromTables();
        if (connection != null && !connection.isClosed()) connection.close();
    }

    private static void connect() {
        try {
            connection = DriverManager.getConnection(url, user, password);
            System.out.println("Connected successfully");
        } catch (SQLException e) {
            System.out.println(e.getMessage());
        }
    }

    private static void createTables() {
        EntityManagerFactory emf = Persistence.createEntityManagerFactory("CatalogPersistence");
        EntityManager em = emf.createEntityManager();

        em.getTransaction().begin();

        em.persist(new JournalDAO());
        em.getTransaction().commit();

        em.close();
        emf.close();
    }

    private static void saveStudent() {
        EntityManagerFactory emf = Persistence.createEntityManagerFactory("CatalogPersistence");
        EntityManager em = emf.createEntityManager();
        EntityTransaction tx = em.getTransaction();

        tx.begin();
        StudentDAO student = new StudentDAO();
        student.setName("Joe");
        student.setPhone("912839031");
        em.persist(student);
        tx.commit();

        em.close();
        emf.close();
    }

    private static void deleteFromTables() throws SQLException {
        System.out.println("Deleting all info from databases");
        Statement statement = connection.createStatement();
        statement.execute("DELETE FROM citationchicagodb");
        statement.execute("DELETE FROM citationdb");
        statement.execute("DELETE FROM journaldb");
        System.out.println("Deleting successfully");
    }
}
